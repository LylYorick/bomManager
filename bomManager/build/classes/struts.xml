<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
	"http://struts.apache.org/dtds/struts-2.3.dtd">

<struts>

    <constant name="struts.enable.DynamicMethodInvocation" value="false" /> 
    <constant name="struts.devMode" value="true" />
    <package name="default" namespace="/" extends="struts-default">
    <!-- 拦截器 -->
 	<!-- <interceptors>
         <interceptor name="loginVerify" class="com.huami.intercept.LoginInterceptor">
         </interceptor>
         <interceptor-stack name="verify">
        	 <interceptor-ref name="defaultStack"> </interceptor-ref>
             <interceptor-ref name="loginVerify">
             	<param name="excludeMethods">login,execute,userLogin</param>
             </interceptor-ref>
             
         </interceptor-stack>
     </interceptors>  -->     
	 <default-interceptor-ref name="defaultStack"></default-interceptor-ref> 
     <!--  默认首页  -->
	  <default-action-ref name="index"></default-action-ref> 
		
    <global-results>
     	<result name="login" type="dispatcher">login.jsp</result>
     	<result name="exception">exception.jsp</result> 
     </global-results>
 <!--     <global-exception-mappings>
     	<exception-mapping result="exception" exception="java.lang.Exception"></exception-mapping>
     </global-exception-mappings> -->
   		<action name="index">
		<result type="dispatcher">/login.jsp</result>
		</action> 
	
        <!-- 验证码Action -->
        <action name="randPic" class="randomAction" >        
	          <result type="stream">        
	            <param name="contentType">image/jpeg</param>        
	            <param name="inputName">inputStream</param>        
	          </result>   
       </action>
       	<!-- 用户管理Action -->
        <action name="user-*" class="userAction"
        	method="{1}"> 
        	<result name="fontPage">/html/frontPage.jsp</result>
        	<result name="list">/html/userManager/user-list.jsp</result>
        	<result name="input">login.jsp</result>
        	<result name="toEdit">/html/userManager/user-edit.jsp</result>
        	<result name="toAdd">/html/userManager/user-add.jsp</result>
        	 <result type="stream" name="ajax-success">
		        <param name="contentType">text/html</param>
		        <param name="inputName">inputStream</param>
		    </result>	
        </action>
          <action name="material-*" class="materialAction"
        	method="{1}"> 
        	<result name="fontPage">/html/frontPage.jsp</result>
        	<result name="list">/html/MaterialManager/material-list.jsp</result>
        	<result name="input">login.jsp</result>
        	<result name="toEdit">/html/MaterialManager/material-edit.jsp</result>
        	<result name="toAdd">/html/MaterialManager/material-add.jsp</result>
        	 <result type="stream" name="ajax-success">
		        <param name="contentType">text/html</param>
		        <param name="inputName">inputStream</param>
		    </result>	
        </action>
         <action name="supplier-*" class="supplierAction"
        	method="{1}"> 
        	<result name="fontPage">/html/frontPage.jsp</result>
        	<result name="list">/html/SupplierManager/supplier-list.jsp</result>
        	<result name="input">login.jsp</result>
        	<result name="toEdit">/html/SupplierManager/supplier-edit.jsp</result>
        	<result name="toAdd">/html/SupplierManager/supplier-add.jsp</result>
        	 <result type="stream" name="ajax-success">
		        <param name="contentType">text/html</param>
		        <param name="inputName">inputStream</param>
		    </result>	
        </action>
        <action name="inventory-*" class="inventoryAction"
        	method="{1}"> 
        	<result name="fontPage">/html/frontPage.jsp</result>
        	<result name="list">/html/InventoryManager/inventory-list.jsp</result>
        	<result name="input">login.jsp</result>
        	<result name="toEdit">/html/SupplierManager/supplier-edit.jsp</result>
        	<result name="toAdd">/html/InventoryManager/inventory-add.jsp</result>
        	<result name="executeSql">/html/ExecuteManager/execute-list.jsp</result>
        	<result type="stream" name="ajax-success">
		        <param name="contentType">text/html</param>
		        <param name="inputName">inputStream</param>
		    </result>	
        </action>
         <action name="invlog-*" class="invlogAction"
        	method="{1}"> 
        	<result name="fontPage">/html/frontPage.jsp</result>
        	<result name="list">/html/invlogManager/invlog-list.jsp</result>
        	<result name="input">login.jsp</result>
        	<result name="toEdit">/html/SupplierManager/supplier-edit.jsp</result>
        	<result name="toAdd">/html/invlogManager/invlog-add.jsp</result>
        	<result name="toDelivery">/html/InvlogManager/invlog-delivery.jsp</result>
        	 <result type="stream" name="ajax-success">
		        <param name="contentType">text/html</param>
		        <param name="inputName">inputStream</param>
		    </result>	
        </action>
          <action name="executeSql-*" class="executeSqlAction"
        	method="{1}"> 
        	<result name="fontPage">/html/frontPage.jsp</result>
        	<result name="input">login.jsp</result>
        	<result name="list">/html/ExecuteManager/execute-list.jsp</result>
        </action>
      	<action name="order-*"  class="orderAction"
        	method="{1}"> 
        	<result name="fontPage">/html/frontPage.jsp</result>
        	<result name="list">/html/OrderManager/order-add-list.jsp</result>
        	<result name="input">login.jsp</result>
        	<result name="toEdit">/html/OrderManager/order-edit.jsp</result>
        	<result name="addjj">/html/OrderManager/order-add-jj.jsp</result>
        	<result name="addpcb">/html/OrderManager/order-add-pcb.jsp</result>
        	<result name="addcg">/html/OrderManager/order-add-cg.jsp</result>
        	<result name="addpxt">/html/OrderManager/order-add-xt.jsp</result>
        	<result name="addpgx">/html/OrderManager/order-add-gx.jsp</result>
        	<result name="verifyList">/html/OrderManager/order-verify-list.jsp</result>
        	<result name="toVerify">/html/OrderManager/order-verify.jsp</result>
        	<result name="toManager">/html/OrderManager/order-manager-list.jsp</result>
        	<result name="toDetail">/html/OrderManager/order-manager-detail.jsp</result>
        	<result name="toEdit">/html/OrderManager/order-edit.jsp</result>
        	<result name="toComplete">/html/OrderManager/order-complete.jsp</result>
        	<result name="toReport">/html/OrderManager/order-report-list.jsp</result>
        	 <result type="stream" name="ajax-success">
		        <param name="contentType">text/html</param>
		        <param name="inputName">inputStream</param>
		    </result>	
		     <result type="stream" name="file-downLoad">
		        <param name="contentType">application/x-xls</param>
		        <param name="inputName">inputStream</param>
		     <param name="contentDisposition">attachment;filename="${imgFileName}"</param>
		    </result>	
        </action>
        <action name="bom-*" class="bomAction"
        	method="{1}"> 
        	<result name="fontPage">/html/frontPage.jsp</result>
        	<result name="input">login.jsp</result>
        	<result name="list">/html/BomManager/bom-list.jsp</result>
        	<result name="normalList">/html/BomManager/bom-normalList.jsp</result>
        	<result name="toEdit">/html/BomManager/bom-edit.jsp</result>
        	<result name="toTopAdd">/html/BomManager/bom-topAdd.jsp</result>
        	  <result type="stream" name="file-downLoad">
		        <param name="contentType">application/x-xls</param>
		        <param name="inputName">inputStream</param>
		     <param name="contentDisposition">attachment;filename="${docFileName}"</param>
		    </result>	
        </action>
    </package> 
</struts>
   










<!-- 定义新的拦截器栈, 配置 prepare 拦截器栈的 alwaysInvokePrepare 参数值为 false -->
	<!-- 	<interceptors>
			<interceptor-stack name="sshStack">
				<interceptor-ref name="paramsPrepareParamsStack">
					<param name="prepare.alwaysInvokePrepare">false</param>
				</interceptor-ref>
			</interceptor-stack>
		</interceptors>
		
		使用新的拦截器栈
		<default-interceptor-ref name="sshStack"></default-interceptor-ref> -->
